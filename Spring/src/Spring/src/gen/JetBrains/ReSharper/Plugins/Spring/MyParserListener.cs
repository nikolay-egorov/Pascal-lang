//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from V:/Users/Emperor/Desktop/IDE_Dev/Rider_Projects/Pascal-lang/Spring/src/Spring/src/g4\MyParser.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JetBrains.ReSharper.Plugins.Spring {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IMyParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] MyParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] MyParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] MyParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] MyParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.unsignedNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsignedNumber([NotNull] MyParser.UnsignedNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.unsignedNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsignedNumber([NotNull] MyParser.UnsignedNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.unsignedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsignedInteger([NotNull] MyParser.UnsignedIntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.unsignedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsignedInteger([NotNull] MyParser.UnsignedIntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.unsignedReal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsignedReal([NotNull] MyParser.UnsignedRealContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.unsignedReal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsignedReal([NotNull] MyParser.UnsignedRealContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.fileNode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileNode([NotNull] MyParser.FileNodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.fileNode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileNode([NotNull] MyParser.FileNodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] MyParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] MyParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.simpleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExpression([NotNull] MyParser.SimpleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.simpleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExpression([NotNull] MyParser.SimpleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] MyParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] MyParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] MyParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] MyParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet([NotNull] MyParser.SetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet([NotNull] MyParser.SetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.setContainer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetContainer([NotNull] MyParser.SetContainerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.setContainer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetContainer([NotNull] MyParser.SetContainerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.functionDesignator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDesignator([NotNull] MyParser.FunctionDesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.functionDesignator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDesignator([NotNull] MyParser.FunctionDesignatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] MyParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] MyParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.actualParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActualParameter([NotNull] MyParser.ActualParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.actualParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActualParameter([NotNull] MyParser.ActualParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] MyParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] MyParser.CompoundStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MyParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MyParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.unlabelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlabelledStatement([NotNull] MyParser.UnlabelledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.unlabelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlabelledStatement([NotNull] MyParser.UnlabelledStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.structuredStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructuredStatement([NotNull] MyParser.StructuredStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.structuredStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructuredStatement([NotNull] MyParser.StructuredStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.gotoStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotoStatement([NotNull] MyParser.GotoStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.gotoStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotoStatement([NotNull] MyParser.GotoStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyStatement([NotNull] MyParser.EmptyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyStatement([NotNull] MyParser.EmptyStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleStatement([NotNull] MyParser.SimpleStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleStatement([NotNull] MyParser.SimpleStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledStatement([NotNull] MyParser.LabeledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledStatement([NotNull] MyParser.LabeledStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStatement([NotNull] MyParser.AssignmentStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStatement([NotNull] MyParser.AssignmentStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.assignmentVariants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentVariants([NotNull] MyParser.AssignmentVariantsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.assignmentVariants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentVariants([NotNull] MyParser.AssignmentVariantsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] MyParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] MyParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] MyParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] MyParser.StatementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalStatement([NotNull] MyParser.ConditionalStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalStatement([NotNull] MyParser.ConditionalStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] MyParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] MyParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseStatement([NotNull] MyParser.CaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseStatement([NotNull] MyParser.CaseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.caseListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseListElement([NotNull] MyParser.CaseListElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.caseListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseListElement([NotNull] MyParser.CaseListElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.constList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstList([NotNull] MyParser.ConstListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.constList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstList([NotNull] MyParser.ConstListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] MyParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] MyParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.constantChr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantChr([NotNull] MyParser.ConstantChrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.constantChr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantChr([NotNull] MyParser.ConstantChrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.unsignedConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsignedConstant([NotNull] MyParser.UnsignedConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.unsignedConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsignedConstant([NotNull] MyParser.UnsignedConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.repetetiveStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepetetiveStatement([NotNull] MyParser.RepetetiveStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.repetetiveStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepetetiveStatement([NotNull] MyParser.RepetetiveStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] MyParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] MyParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatStatement([NotNull] MyParser.RepeatStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatStatement([NotNull] MyParser.RepeatStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] MyParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] MyParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.forList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForList([NotNull] MyParser.ForListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.forList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForList([NotNull] MyParser.ForListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.withStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithStatement([NotNull] MyParser.WithStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.withStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithStatement([NotNull] MyParser.WithStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.varList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarList([NotNull] MyParser.VarListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.varList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarList([NotNull] MyParser.VarListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.initialValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitialValue([NotNull] MyParser.InitialValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.initialValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitialValue([NotNull] MyParser.InitialValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.finalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinalValue([NotNull] MyParser.FinalValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.finalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinalValue([NotNull] MyParser.FinalValueContext context);
}
} // namespace JetBrains.ReSharper.Plugins.Spring
